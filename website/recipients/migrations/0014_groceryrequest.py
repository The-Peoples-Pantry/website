# Generated by Django 3.1.2 on 2020-11-24 02:38

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("recipients", "0013_auto_20201124_0051"),
    ]

    operations = [
        migrations.CreateModel(
            name="GroceryRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="Full name")),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Email address"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Use the format 555-555-5555",
                        max_length=20,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "can_receive_texts",
                    models.BooleanField(
                        help_text="Can the phone number provided receive text messages?",
                        verbose_name="Can receive texts",
                    ),
                ),
                (
                    "address_1",
                    models.CharField(
                        help_text="Street name and number",
                        max_length=256,
                        verbose_name="Address line 1",
                    ),
                ),
                (
                    "address_2",
                    models.CharField(
                        blank=True,
                        help_text="Apartment, Unit, or Suite number",
                        max_length=256,
                        verbose_name="Address line 2",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        choices=[
                            ("Ajax", "Ajax"),
                            ("Aurora", "Aurora"),
                            ("Brampton", "Brampton"),
                            ("Brock", "Brock"),
                            ("Burlington", "Burlington"),
                            ("Caledon", "Caledon"),
                            ("Clarington", "Clarington"),
                            ("East Gwilimbury", "East Gwilimbury"),
                            ("East York", "East York"),
                            ("Etobicoke", "Etobicoke"),
                            ("Georgina", "Georgina"),
                            ("Halton Hills", "Halton Hills"),
                            ("Hamilton", "Hamilton"),
                            ("King", "King"),
                            ("Maple", "Maple"),
                            ("Markham", "Markham"),
                            ("Milton", "Milton"),
                            ("Mississauga", "Mississauga"),
                            ("Newmarket", "Newmarket"),
                            ("North York", "North York"),
                            ("Oakville", "Oakville"),
                            ("Oshawa", "Oshawa"),
                            ("Pickering", "Pickering"),
                            ("Richmond Hill", "Richmond Hill"),
                            ("Scarborough", "Scarborough"),
                            ("Scugog", "Scugog"),
                            ("Stouffville", "Stouffville"),
                            ("Thornhill", "Thornhill"),
                            ("Toronto", "Toronto (downtown, east/west ends)"),
                            ("Uxbridge", "Uxbridge"),
                            ("Vaughan", "Vaughan"),
                            ("Whitby", "Whitby"),
                            ("York", "York"),
                        ],
                        default="Toronto",
                        max_length=50,
                        verbose_name="City",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=7, verbose_name="Postal code"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Is there anything else we should know about you or the person you are requesting support for that will help us complete the request better?",
                        verbose_name="Additional information",
                    ),
                ),
                (
                    "bipoc",
                    models.BooleanField(
                        verbose_name="Black, Indigenous, and People of Colour (BIPOC)"
                    ),
                ),
                (
                    "lgbtq",
                    models.BooleanField(
                        verbose_name="Lesbian, Gay, Bisexual, Trans, Queer (LGBTQ), gender non-conforming or non-binary"
                    ),
                ),
                (
                    "has_disability",
                    models.BooleanField(verbose_name="Living with disabilities"),
                ),
                (
                    "immigrant_or_refugee",
                    models.BooleanField(
                        verbose_name="Newly arrived immigrant or refugee"
                    ),
                ),
                (
                    "housing_issues",
                    models.BooleanField(
                        verbose_name="Precariously housed (no fixed address, living in a shelter, etc.)"
                    ),
                ),
                ("sex_worker", models.BooleanField(verbose_name="Sex worker")),
                ("single_parent", models.BooleanField(verbose_name="Single parent")),
                (
                    "can_meet_for_delivery",
                    models.BooleanField(
                        help_text="We care about safety. Thus, we try to avoid delivery volunteers going into buildings or houses. Would you / the person requiring support be able to meet the delivery person in the lobby or door of the residence?",
                        verbose_name="Able to meet delivery driver",
                    ),
                ),
                (
                    "delivery_details",
                    models.TextField(
                        blank=True,
                        help_text="Please provide us with any details we may need to know for the delivery",
                        verbose_name="Delivery details",
                    ),
                ),
                (
                    "available_days",
                    models.CharField(
                        help_text="What days are you (or the person you're requesting for) available for receiving the delivery?",
                        max_length=256,
                        verbose_name="Available days",
                    ),
                ),
                (
                    "available_time_periods",
                    models.CharField(
                        help_text="What times are you (or the person you're requesting for) available for receiving the delivery?",
                        max_length=256,
                        verbose_name="Available time periods",
                    ),
                ),
                (
                    "on_behalf_of",
                    models.BooleanField(
                        help_text="Are you filling out this form on behalf of someone else?",
                        verbose_name="On someone's behalf",
                    ),
                ),
                (
                    "recipient_notified",
                    models.BooleanField(
                        help_text="Has the person you're filling out the form for been informed they will get a delivery?",
                        verbose_name="Recipient has been notified",
                    ),
                ),
                (
                    "requester_name",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Your full name"
                    ),
                ),
                (
                    "requester_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Your email address"
                    ),
                ),
                (
                    "requester_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Use the format 555-555-5555",
                        max_length=20,
                        verbose_name="Your phone number",
                    ),
                ),
                ("accept_terms", models.BooleanField(verbose_name="Accept terms")),
                ("delivery_date", models.DateField(blank=True, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("anonymized_latitude", models.FloatField(default=43.65107)),
                ("anonymized_longitude", models.FloatField(default=-79.347015)),
                (
                    "num_adults",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of adults in the household"
                    ),
                ),
                (
                    "num_children",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of children in the household"
                    ),
                ),
                (
                    "children_ages",
                    models.CharField(
                        blank=True,
                        help_text="When able, we will try to provide additional snacks for children. If this is something you would be interested in, please list the ages of any children in the household so we may try to provide appropriate snacks for their age group.",
                        max_length=256,
                        verbose_name="Ages of children",
                    ),
                ),
                (
                    "food_allergies",
                    models.TextField(
                        blank=True,
                        help_text="Please list any allergies or dietary restrictions",
                        verbose_name="Food allergies",
                    ),
                ),
                (
                    "vegetables",
                    models.CharField(
                        help_text="Select all that you want",
                        max_length=256,
                        verbose_name="Vegetables",
                    ),
                ),
                (
                    "fruits",
                    models.CharField(
                        help_text="Select all that you want",
                        max_length=256,
                        verbose_name="Fruits",
                    ),
                ),
                (
                    "protein",
                    models.CharField(
                        choices=[
                            ("Beef", "Beef"),
                            ("Chicken", "Chicken"),
                            ("Tofu", "Tofu"),
                            ("Eggs", "Eggs"),
                        ],
                        help_text="Select one of the following",
                        max_length=256,
                        verbose_name="Protein",
                    ),
                ),
                (
                    "grains",
                    models.CharField(
                        help_text="Select up to 3",
                        max_length=256,
                        verbose_name="Grains",
                    ),
                ),
                (
                    "condiments",
                    models.CharField(
                        help_text="Select all that you want",
                        max_length=256,
                        verbose_name="Condiments",
                    ),
                ),
                (
                    "dairy",
                    models.CharField(
                        choices=[("Milk", "Milk"), ("Almond Milk", "Almond Milk")],
                        help_text="Select one of the following",
                        max_length=256,
                        verbose_name="Dairy",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
