# Generated by Django 3.1.2 on 2020-11-08 21:32

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("recipients", "0002_auto_20201108_1913"),
    ]

    operations = [
        migrations.AlterField(
            model_name="mealrequest",
            name="accept_terms",
            field=models.BooleanField(verbose_name="Accept terms"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="address_1",
            field=models.CharField(
                help_text="Street name and number",
                max_length=256,
                verbose_name="Address line 1",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="address_2",
            field=models.CharField(
                help_text="Apartment, Unit, or Suite number",
                max_length=256,
                verbose_name="Address line 2",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="available_days",
            field=models.CharField(
                help_text="What days are you (or the person you're requesting for) available for receiving the delivery?",
                max_length=256,
                verbose_name="Available days",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="available_time_periods",
            field=models.CharField(
                help_text="What times are you (or the person you're requesting for) available for receiving the delivery?",
                max_length=256,
                verbose_name="Available time periods",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="bipoc",
            field=models.BooleanField(
                verbose_name="Black, Indigenous, and People of Colour (BIPOC)"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="can_meet_for_delivery",
            field=models.BooleanField(
                help_text="We care about safety. Thus, we try to avoid delivery volunteers going into buildings or houses. Would you / the person requiring support be able to meet the delivery person in the lobby or door of the residence?",
                verbose_name="Able to meet delivery driver",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="can_receive_texts",
            field=models.BooleanField(
                help_text="Can the phone number provided receive text messages?",
                verbose_name="Can receive texts",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="children_ages",
            field=models.CharField(
                blank=True,
                help_text="When able, we will try to provide additional snacks for children. If this is something you would be interested in, please list the ages of any children in the household so we may try to provide appropriate snacks for their age group.",
                max_length=256,
                verbose_name="Ages of children",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="city",
            field=models.CharField(
                choices=[
                    ("Ajax", "Ajax"),
                    ("Aurora", "Aurora"),
                    ("Brampton", "Brampton"),
                    ("Brock", "Brock"),
                    ("Burlington", "Burlington"),
                    ("Caledon", "Caledon"),
                    ("Clarington", "Clarington"),
                    ("East Gwilimbury", "East Gwilimbury"),
                    ("East York", "East York"),
                    ("Etobicoke", "Etobicoke"),
                    ("Georgina", "Georgina"),
                    ("Halton Hills", "Halton Hills"),
                    ("Hamilton", "Hamilton"),
                    ("King", "King"),
                    ("Maple", "Maple"),
                    ("Markham", "Markham"),
                    ("Milton", "Milton"),
                    ("Mississauga", "Mississauga"),
                    ("Newmarket", "Newmarket"),
                    ("North York", "North York"),
                    ("Oakville", "Oakville"),
                    ("Oshawa", "Oshawa"),
                    ("Pickering", "Pickering"),
                    ("Richmond Hill", "Richmond Hill"),
                    ("Scarborough", "Scarborough"),
                    ("Scugog", "Scugog"),
                    ("Stouffville", "Stouffville"),
                    ("Thornhill", "Thornhill"),
                    ("Toronto", "Toronto (downtown, east/west ends)"),
                    ("Uxbridge", "Uxbridge"),
                    ("Vaughan", "Vaughan"),
                    ("Whitby", "Whitby"),
                    ("York", "York"),
                ],
                default="Toronto",
                max_length=50,
                verbose_name="City",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="dairy_free",
            field=models.BooleanField(verbose_name="Dairy free"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="delivery_details",
            field=models.TextField(
                help_text="Please provide us with any details we may need to know for the delivery",
                verbose_name="Delivery details",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="email",
            field=models.EmailField(max_length=254, verbose_name="Email address"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="food_allergies",
            field=models.TextField(
                blank=True,
                help_text="Please list any allergies or dietary restrictions",
                verbose_name="Food allergies",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="food_preferences",
            field=models.TextField(
                blank=True,
                help_text="Please list any food preferences (eg. meat, pasta, veggies, etc.)",
                verbose_name="Food preferences",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="gluten_free",
            field=models.BooleanField(verbose_name="Gluten free"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="halal",
            field=models.BooleanField(verbose_name="Halal"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="has_disability",
            field=models.BooleanField(verbose_name="Living with disabilities"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="housing_issues",
            field=models.BooleanField(
                verbose_name="Precariously housed (no fixed address, living in a shelter, etc.)"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="immigrant_or_refugee",
            field=models.BooleanField(
                verbose_name="Newly arrived immigrant or refugee"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="lgbtq",
            field=models.BooleanField(
                verbose_name="Lesbian, Gay, Bisexual, Trans, Queer (LGBTQ), gender non-conforming or non-binary"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="low_carb",
            field=models.BooleanField(verbose_name="Low Carbohydrate"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="name",
            field=models.CharField(max_length=256, verbose_name="Full name"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Is there anything else we should know about you or the person you are requesting support for that will help us complete the request better?",
                verbose_name="Additional information",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="num_adults",
            field=models.PositiveSmallIntegerField(
                verbose_name="Number of adults in the household"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="num_children",
            field=models.PositiveSmallIntegerField(
                verbose_name="Number of children in the household"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="on_behalf_of",
            field=models.BooleanField(
                help_text="Are you filling out this form on behalf of someone else?",
                verbose_name="On someone's behalf",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="phone_number",
            field=models.CharField(
                help_text="Use the format 555-555-5555",
                max_length=20,
                verbose_name="Phone number",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="postal_code",
            field=models.CharField(max_length=7, verbose_name="Postal code"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="recipient_notified",
            field=models.BooleanField(
                help_text="Has the person you're filling out the form for been informed they will get a delivery?",
                verbose_name="Recipient has been notified",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="requester_email",
            field=models.EmailField(
                max_length=254, null=True, verbose_name="Your email address"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="requester_name",
            field=models.CharField(
                max_length=256, null=True, verbose_name="Your full name"
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="requester_phone_number",
            field=models.CharField(
                help_text="Use the format 555-555-5555",
                max_length=20,
                null=True,
                verbose_name="Your phone number",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="sex_worker",
            field=models.BooleanField(verbose_name="Sex worker"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="single_parent",
            field=models.BooleanField(verbose_name="Single parent"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="vegan",
            field=models.BooleanField(verbose_name="Vegan"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="vegetarian",
            field=models.BooleanField(verbose_name="Vegetarian"),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="will_accept_vegan",
            field=models.BooleanField(
                default=True,
                help_text="Are you willing to accept a vegan meal even if you are not vegan?",
                verbose_name="Will accept vegan",
            ),
        ),
        migrations.AlterField(
            model_name="mealrequest",
            name="will_accept_vegetarian",
            field=models.BooleanField(
                default=True,
                help_text="Are you willing to accept a vegetarian meal even if you are not vegetarian?",
                verbose_name="Will accept vegetarian",
            ),
        ),
    ]
